Powershell Script for counting Map frequencies
# Define the root path to your Maps folder
$rootPath = "Your\Path\to\Maps"
# Initialize a hashtable to store map frequencies
$mapFrequencies = @{}
# Get all image files in the Maps folder and its subdirectories
$imageFiles = Get-ChildItem -Path $rootPath -Recurse -Include *.png
# Process each file to count frequencies
foreach ($file in $imageFiles) {
    # Extract the folder names for Map and Difficulty
    $mapName = $file.Directory.Parent.Name   # Parent folder (e.g., "Cliffside")
    $difficulty = $file.Directory.Name       # Difficulty folder (e.g., "Medium")
    # Construct the key as 'MapName-Difficulty'
    $key = "$mapName-$difficulty"
    # Increment the count for the key
    if ($mapFrequencies.ContainsKey($key)) {
        $mapFrequencies[$key]++
    } else {
        $mapFrequencies[$key] = 1
    }
}
$output = "const mapFrequencies = {"
foreach ($key in $mapFrequencies.Keys) {
    $output += "    '$key': $($mapFrequencies[$key]),`n"
}
$output = $output.TrimEnd("`,n") + "`n};"
$output
# Optional: Save the output to a file
$output | Out-File -FilePath "$rootPath\mapFrequencies.js" -Encoding UTF8
# Indicate completion
Write-Host "Map frequencies have been generated and saved to mapFrequencies.js.


Script to mass rename pictures in the correct format


# Define the base directory where images are located
$baseDirectory = "your\path\to\Maps"
# Get all image files in subdirectories with the .png extension
$imageFiles = Get-ChildItem -Path $baseDirectory -Recurse -Filter "*.png"
# Loop through each file and rename
foreach ($image in $imageFiles) {
    # Extract the subfolder names (e.g., "Inferno\Medium")
    $relativePath = $image.Directory.FullName.Substring($baseDirectory.Length + 1)
    
    # Replace '\' with '_' and convert to lowercase
    $folderName = $relativePath -replace '\\', '_' -replace '/', '_' | ForEach-Object { $_.ToLower() }
    
    # Define the new name with numbering
    $filesInFolder = Get-ChildItem -Path $image.Directory.FullName -Filter "*.png" | Sort-Object Name
    $counter = 1
    foreach ($file in $filesInFolder) {
        # Generate new file name
        $newName = "${folderName}-${counter}.png"
        $newPath = Join-Path -Path $image.Directory.FullName -ChildPath $newName
        
        # Rename the file
        Rename-Item -Path $file.FullName -NewName $newPath
        Write-Host "Renamed: $($file.FullName) -> $newPath"
        $counter++
    }
}
